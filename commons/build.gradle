apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply from: '../quality/quality.gradle'

android {
    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion

    defaultConfig {
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.compileSdkVersion
        versionCode project.libraryCode
        versionName project.libraryName
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver"
    testImplementation "org.assertj:assertj-core:$assertj"
    testImplementation "org.mockito:mockito-core:$mockito"

    api "com.android.support:support-annotations:$support"
    api "com.squareup.retrofit2:retrofit:$retrofit"
    api "com.squareup.okhttp3:okhttp:$okhttp"
    api "com.github.iagocanalejas.dualcache:dualcache:$dualcache"
    api "com.google.guava:guava:$guava"
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    destinationDir = file("../javadoc/")
    failOnError false
}